worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile            on;
    keepalive_timeout   65;

    # Map root directory based on host
    map $host $web_root {
        default "";
        beta.ngx-workshop.io                /opt/mfe-shell-workshop;
        admin.ngx-workshop.io               /opt/mfe-shell-admin;
        auth.ngx-workshop.io                /opt/app-authentication/browser;
    }

    # Map NestJs BFF based on host
    map $host $api_backend {
        default                             "";
        beta.ngx-workshop.io                http://10.116.0.4:3002;
        admin.ngx-workshop.io               http://10.116.0.4:3001;
        auth.ngx-workshop.io                http://10.116.0.4:3000;
    }

    map $host $assets_root {
        default                             "";
        beta.ngx-workshop.io                /opt/ngx-workshop-assets;
        admin.ngx-workshop.io               /opt/ngx-workshop-assets;
        auth.ngx-workshop.io                /opt/ngx-workshop-assets;
    }

    map $host $mfe_remotes {
        default                             "";
        beta.ngx-workshop.io                /opt/mfe-remotes;
        admin.ngx-workshop.io               /opt/mfe-remotes;
        auth.ngx-workshop.io                /opt/mfe-remotes;
    }

    # HTTP → HTTPS redirect
    server {
        listen 80;
        server_name *.ngx-workshop.io;
        return 301 https://$host$request_uri;
    }

    # HTTPS server for all subdomains
    server {
        listen 443 ssl;
        server_name *.ngx-workshop.io;

        ssl_certificate     /etc/letsencrypt/live/ngx-workshop.io/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/ngx-workshop.io/privkey.pem;

        # Main static file handler
        location / {
            root $web_root;
            try_files $uri $uri/ /index.html;
        }

        # TODO Just for now. Need to remove the need for a BFF
        location /api/example-crud/ {
            rewrite ^/api(/.*)$ $1 break;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;

            proxy_pass http://10.116.0.4:3003;
        }

        # TODO Just for now. Need to remove the need for a BFF
        location /api/auth/ {
            rewrite ^/api/auth(/.*)$ $1 break;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;

            proxy_pass http://10.116.0.4:3000;
        }

        # TODO Just for now. Need to remove the need for a BFF
        location /api/user-metadata/ {
            rewrite ^/api(/.*)$ $1 break;   # be specific to avoid over-rewrite

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;

            proxy_pass http://10.116.0.4:3004/;  # note trailing slash
        }


        location /api/assessment-test/ {
            rewrite ^/api(/.*)$ $1 break;   # be specific to avoid over-rewrite

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;

            proxy_pass http://10.116.0.4:3005/;  # note trailing slash
        }


        # navigational-list → service on 3006
        # Match both /api/navigational-list and /api/navigational-list/
        location ~ ^/api/navigational-list(/|$) {
            rewrite ^/api(/.*)$ $1 break;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;

            proxy_pass http://10.116.0.4:3006;  // no trailing slash → pass URI unchanged
        }


        # API routing based on subdomain
        location /api/ {
            rewrite ^/api(/.*)$ $1 break;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;

            proxy_pass $api_backend;
        }

        location ^~ /remotes/ {
            if ($request_method = OPTIONS ) {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods "GET, OPTIONS";
                add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept";
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }

            alias /opt/mfe-remotes/;
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept" always;
            try_files $uri $uri/ =404;
        }

        location /assets/ {
            # strip "/assets/" so /assets/ngx-broker/file -> /ngx-broker/file
            rewrite ^/assets/(.*)$ /$1 break;

            # now root + rewritten URI -> /opt/ngx-workshop-assets/ngx-broker/file
            root $assets_root;

            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept";

            if ($request_method = OPTIONS) {
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }

            try_files $uri $uri/ =404;
        }
    }
}
