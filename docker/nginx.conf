worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    # HTTP â†’ HTTPS redirect for all subdomains
    server {
        listen 80;
        server_name *.ngx-workshop.io;
        return 301 https://$host$request_uri;
    }

    # Generic catch-all HTTPS server for all subdomains
    server {
        listen 443 ssl;
        server_name *.ngx-workshop.io;

        ssl_certificate /etc/letsencrypt/live/ngx-workshop.io/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/ngx-workshop.io/privkey.pem;

        # Optional: conditionally route based on hostname
        if ($host = 'proxy.ngx-workshop.io') {
            root /opt/ngx-angular-shell;
            try_files $uri $uri/ /index.html;
        }

        if ($host = 'mfe-orchestrator.ngx-workshop.io') {
            root /opt/ngx-mfe-orchestrator-ui;
            try_files $uri $uri/ /index.html;
        }

        # Default fallback (optional)
        location / {
            return 404;
        }

        location /api/ {
            # You could dynamically route based on host too
            if ($host = 'proxy.ngx-workshop.io') {
                proxy_pass http://10.116.0.4:3000/;
            }
            if ($host = 'mfe-orchestrator.ngx-workshop.io') {
                proxy_pass http://10.116.0.4:3001/;
            }

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
        }
    }
}
